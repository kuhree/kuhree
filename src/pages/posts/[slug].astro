---
import Layout from "@layouts/Post.astro";
import getPageNumbers from "@utils/getPageNumbers";
import { slugify } from "@utils/slugify";
import { CollectionEntry, getCollection, getEntryBySlug } from "astro:content";

export interface Props {
  post: CollectionEntry<"posts">;
}

type PostResult = {
  params: { slug: string | number };
  props?: { post: CollectionEntry<"posts"> };
}[];

type PagePaths = { params: { slug: string } }[];

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  const filteredPosts = posts.filter(({ data }) => !data.isDraft);

  let postResult: PostResult = filteredPosts.map((post) => {
    return {
      params: { slug: slugify(post) },
      props: { post },
    };
  });

  const pagePaths: PagePaths = getPageNumbers(filteredPosts.length).map(
    (pageNum) => ({
      params: { slug: String(pageNum) },
    })
  );

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;

const post = slug ? await getEntryBySlug("posts", slug) : false;
---

{
  post ? (
    <Layout post={post} />
  ) : (
    <h1>Sorry, seems that post is no longer available.</h1>
  )
}
